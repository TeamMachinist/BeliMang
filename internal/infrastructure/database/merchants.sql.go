// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: merchants.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createMerchant = `-- name: CreateMerchant :one
INSERT INTO merchants (admin_id, name, merchant_category, image_url, lat, lng, created_at)
VALUES ($1, $2, $3, $4, $5, $6, NOW())
RETURNING id, admin_id, name, merchant_category, image_url, lat, lng, created_at
`

type CreateMerchantParams struct {
	AdminID          uuid.UUID `json:"admin_id"`
	Name             string    `json:"name"`
	MerchantCategory string    `json:"merchant_category"`
	ImageUrl         string    `json:"image_url"`
	Lat              float64   `json:"lat"`
	Lng              float64   `json:"lng"`
}

type CreateMerchantRow struct {
	ID               uuid.UUID          `json:"id"`
	AdminID          uuid.UUID          `json:"admin_id"`
	Name             string             `json:"name"`
	MerchantCategory string             `json:"merchant_category"`
	ImageUrl         string             `json:"image_url"`
	Lat              float64            `json:"lat"`
	Lng              float64            `json:"lng"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
}

func (q *Queries) CreateMerchant(ctx context.Context, arg CreateMerchantParams) (CreateMerchantRow, error) {
	row := q.db.QueryRow(ctx, createMerchant,
		arg.AdminID,
		arg.Name,
		arg.MerchantCategory,
		arg.ImageUrl,
		arg.Lat,
		arg.Lng,
	)
	var i CreateMerchantRow
	err := row.Scan(
		&i.ID,
		&i.AdminID,
		&i.Name,
		&i.MerchantCategory,
		&i.ImageUrl,
		&i.Lat,
		&i.Lng,
		&i.CreatedAt,
	)
	return i, err
}
