services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile
      target: postgres-h3
    container_name: belimang-postgres
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      # Performance tuning
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
      - ./seeds:/seeds:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    networks:
      - belimang-network
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=2MB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "max_wal_size=4GB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "1"
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: belimang-redis
    env_file: .env
    ports:
      - "${CACHE_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - belimang-network
    command:
      - "redis-server"
      - "--appendonly"
      - "yes"
      - "--appendfsync"
      - "everysec"
      - "--maxmemory"
      - "512mb"
      - "--maxmemory-policy"
      - "allkeys-lru"
      - "--save"
      - "900 1"
      - "--save"
      - "300 10"
      - "--save"
      - "60 10000"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 768M
        reservations:
          cpus: "0.5"
          memory: 256M

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        CGO_ENABLED: 1
      shm_size: "2gb"
    container_name: belimang-app
    env_file: .env
    ports:
      - "${HTTP_PORT:-8080}:8080"
    environment:
      ENV: production
      GIN_MODE: release
      HTTP_PORT: ${HTTP_PORT:-8080}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_ADDR: ${REDIS_ADDR}
      GOMAXPROCS: ${GOMAXPROCS:-4}
      GOMEMLIMIT: ${GOMEMLIMIT:-1536MiB}
      # Enable io_uring for better I/O performance
      GODEBUG: "asyncpreemptoff=1"
      GOCACHE: /tmp/go-cache
      GOTMPDIR: /tmp/go-tmp
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - belimang-network
    healthcheck:
      test: ["CMD", "/app/server", "health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "4"
          memory: 2G
        reservations:
          cpus: "2"
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    # Security options
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=2G
      - /tmp/go-cache:noexec,nosuid,size=1G
      - /tmp/go-tmp:noexec,nosuid,size=1G

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  belimang-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
